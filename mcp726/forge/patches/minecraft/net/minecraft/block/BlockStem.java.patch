--- ../src_base/minecraft/net/minecraft/block/BlockStem.java
+++ ../src_work/minecraft/net/minecraft/block/BlockStem.java
@@ -2,6 +2,8 @@
 
 import cpw.mods.fml.relauncher.Side;
 import cpw.mods.fml.relauncher.SideOnly;
+
+import java.util.ArrayList;
 import java.util.Random;
 import net.minecraft.creativetab.CreativeTabs;
 import net.minecraft.item.Item;
@@ -9,6 +11,8 @@
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
 
+import net.minecraftforge.common.ForgeDirection;
+
 public class BlockStem extends BlockFlower
 {
     /** Defines if it is a Melon or a Pumpkin that the stem is producing. */
@@ -101,7 +105,8 @@
 
                     int var11 = par1World.getBlockId(var9, par3 - 1, var10);
 
-                    if (par1World.getBlockId(var9, par3, var10) == 0 && (var11 == Block.tilledField.blockID || var11 == Block.dirt.blockID || var11 == Block.grass.blockID))
+                    boolean isSoil = (blocksList[var11] != null && blocksList[var11].canSustainPlant(par1World, var9, par3 - 1, var10, ForgeDirection.UP, this));
+                    if (par1World.getBlockId(var9, par3, var10) == 0 && (isSoil || var11 == Block.dirt.blockID || var11 == Block.grass.blockID))
                     {
                         par1World.setBlockWithNotify(var9, par3, var10, this.fruitType.blockID);
                     }
@@ -137,11 +142,11 @@
                 int var19 = par1World.getBlockId(var17, par3 - 1, var18);
                 float var20 = 0.0F;
 
-                if (var19 == Block.tilledField.blockID)
+                if (blocksList[var19] != null && blocksList[var19].canSustainPlant(par1World, var17, par3 - 1, var18, ForgeDirection.UP, this))
                 {
                     var20 = 1.0F;
 
-                    if (par1World.getBlockMetadata(var17, par3 - 1, var18) > 0)
+                    if (blocksList[var19].isFertile(par1World, var17, par3 - 1, var18))
                     {
                         var20 = 3.0F;
                     }
@@ -241,29 +246,22 @@
     public void dropBlockAsItemWithChance(World par1World, int par2, int par3, int par4, int par5, float par6, int par7)
     {
         super.dropBlockAsItemWithChance(par1World, par2, par3, par4, par5, par6, par7);
-
-        if (!par1World.isRemote)
-        {
-            Item var8 = null;
-
-            if (this.fruitType == Block.pumpkin)
+    }
+
+    @Override 
+    public ArrayList<ItemStack> getBlockDropped(World world, int x, int y, int z, int metadata, int fortune)
+    {
+        ArrayList<ItemStack> ret = new ArrayList<ItemStack>();
+
+        for (int i = 0; i < 3; i++)
+        {
+            if (world.rand.nextInt(15) <= metadata)
             {
-                var8 = Item.pumpkinSeeds;
+                ret.add(new ItemStack(fruitType == pumpkin ? Item.pumpkinSeeds : Item.melonSeeds));
             }
-
-            if (this.fruitType == Block.melon)
-            {
-                var8 = Item.melonSeeds;
-            }
-
-            for (int var9 = 0; var9 < 3; ++var9)
-            {
-                if (par1World.rand.nextInt(15) <= par5)
-                {
-                    this.dropBlockAsItem_do(par1World, par2, par3, par4, new ItemStack(var8));
-                }
-            }
-        }
+        }
+
+        return ret;
     }
 
     /**
